name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4.0.0

    - name: Decode and create application-secret.yml
      run: |
          echo "${{ secrets.APPLICATION_SECRET_BASE64 }}" | base64 --decode > application-secret.yml

    - name: Build with Gradle
      run: ./gradlew build --scan

    - name: Upload Test Results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: build/reports/tests/

    - name: Backend CI Discord Notification (Success)
      if: ${{ success() }}
      uses: sarisia/actions-status-discord@v1
      with:
        title: ✅ Backend CI success ✅
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        color: 00FF00

    - name: Backend CI Discord Notification (Failure)
      if: ${{ failure() }}
      uses: sarisia/actions-status-discord@v1
      with:
        title: ❗️ Backend CI failed ❗️
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        color: FF0000

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@v4.0.0
